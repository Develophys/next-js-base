datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id       String    @id @default(uuid())
  email    String    @unique
  name     String?
  cpf      String
  password String
  type     UserType
  profiles Profile[] @relation("UserToProfile")
  Course   Course[]
}

enum UserType {
  STUDENT
  TEACHER
  ADM
}

model Profile {
  id          String       @id @default(uuid())
  name        String
  description String
  users       User[]       @relation("UserToProfile")
  permissions Permission[] @relation("ProfileToPermission")
}

model Permission {
  id          String    @id @default(uuid())
  name        String
  description String
  profiles    Profile[] @relation("ProfileToPermission")
}

model Student {
  id                     String   @id @default(uuid())
  userId                 String   @unique
  currentCourses         Course[] @relation("CourseStudents")
  weekendWorkloadLimit   Int
  currentWeekendWorkload Int
  courseProgress         Float // Assuming this tracks progress as a percentage
}

model Teacher {
  id                  String   @id @default(uuid())
  currentCourses      Course[]
  weekendDaysFree     String // Alternatively, you could use an enum here
  weekendDaysOccupied String // Alternatively, you could use an enum here
  currentWorkload     Int
}

model Course {
  id                      String   @id @default(uuid())
  name                    String
  description             String
  studentsLimit           Int
  currentNumberOfStudents Int
  startAt                 DateTime
  endAt                   DateTime
  workload                Int
  weekendDays             String // Alternatively, you could use an enum here
  classWorkloadDuration   Int

  responsible User   @relation(fields: [userId], references: [id])
  userId      String

  materials File[] @relation("CourseFiles")

  currentStudents Student[] @relation("CourseStudents")

  Teacher   Teacher? @relation(fields: [teacherId], references: [id])
  teacherId String?
}

model File {
  id      String   @id @default(uuid())
  name    String
  type    String
  size    String
  url     String
  courses Course[] @relation("CourseFiles")
}
